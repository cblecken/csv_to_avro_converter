/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package cblecken;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class cust extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"cust\",\"namespace\":\"cblecken\",\"fields\":[{\"name\":\"first\",\"type\":\"string\"},{\"name\":\"middle\",\"type\":\"string\"},{\"name\":\"last\",\"type\":\"string\"},{\"name\":\"dob\",\"type\":\"string\"},{\"name\":\"ssn\",\"type\":\"long\"},{\"name\":\"gender\",\"type\":\"string\"},{\"name\":\"metrics\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence first;
  @Deprecated public java.lang.CharSequence middle;
  @Deprecated public java.lang.CharSequence last;
  @Deprecated public java.lang.CharSequence dob;
  @Deprecated public long ssn;
  @Deprecated public java.lang.CharSequence gender;
  @Deprecated public java.lang.CharSequence metrics;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use {@link \#newBuilder()}. 
   */
  public cust() {}

  /**
   * All-args constructor.
   */
  public cust(java.lang.CharSequence first, java.lang.CharSequence middle, java.lang.CharSequence last, java.lang.CharSequence dob, java.lang.Long ssn, java.lang.CharSequence gender, java.lang.CharSequence metrics) {
    this.first = first;
    this.middle = middle;
    this.last = last;
    this.dob = dob;
    this.ssn = ssn;
    this.gender = gender;
    this.metrics = metrics;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return first;
    case 1: return middle;
    case 2: return last;
    case 3: return dob;
    case 4: return ssn;
    case 5: return gender;
    case 6: return metrics;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: first = (java.lang.CharSequence)value$; break;
    case 1: middle = (java.lang.CharSequence)value$; break;
    case 2: last = (java.lang.CharSequence)value$; break;
    case 3: dob = (java.lang.CharSequence)value$; break;
    case 4: ssn = (java.lang.Long)value$; break;
    case 5: gender = (java.lang.CharSequence)value$; break;
    case 6: metrics = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'first' field.
   */
  public java.lang.CharSequence getFirst() {
    return first;
  }

  /**
   * Sets the value of the 'first' field.
   * @param value the value to set.
   */
  public void setFirst(java.lang.CharSequence value) {
    this.first = value;
  }

  /**
   * Gets the value of the 'middle' field.
   */
  public java.lang.CharSequence getMiddle() {
    return middle;
  }

  /**
   * Sets the value of the 'middle' field.
   * @param value the value to set.
   */
  public void setMiddle(java.lang.CharSequence value) {
    this.middle = value;
  }

  /**
   * Gets the value of the 'last' field.
   */
  public java.lang.CharSequence getLast() {
    return last;
  }

  /**
   * Sets the value of the 'last' field.
   * @param value the value to set.
   */
  public void setLast(java.lang.CharSequence value) {
    this.last = value;
  }

  /**
   * Gets the value of the 'dob' field.
   */
  public java.lang.CharSequence getDob() {
    return dob;
  }

  /**
   * Sets the value of the 'dob' field.
   * @param value the value to set.
   */
  public void setDob(java.lang.CharSequence value) {
    this.dob = value;
  }

  /**
   * Gets the value of the 'ssn' field.
   */
  public java.lang.Long getSsn() {
    return ssn;
  }

  /**
   * Sets the value of the 'ssn' field.
   * @param value the value to set.
   */
  public void setSsn(java.lang.Long value) {
    this.ssn = value;
  }

  /**
   * Gets the value of the 'gender' field.
   */
  public java.lang.CharSequence getGender() {
    return gender;
  }

  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(java.lang.CharSequence value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'metrics' field.
   */
  public java.lang.CharSequence getMetrics() {
    return metrics;
  }

  /**
   * Sets the value of the 'metrics' field.
   * @param value the value to set.
   */
  public void setMetrics(java.lang.CharSequence value) {
    this.metrics = value;
  }

  /** Creates a new cust RecordBuilder */
  public static cblecken.cust.Builder newBuilder() {
    return new cblecken.cust.Builder();
  }
  
  /** Creates a new cust RecordBuilder by copying an existing Builder */
  public static cblecken.cust.Builder newBuilder(cblecken.cust.Builder other) {
    return new cblecken.cust.Builder(other);
  }
  
  /** Creates a new cust RecordBuilder by copying an existing cust instance */
  public static cblecken.cust.Builder newBuilder(cblecken.cust other) {
    return new cblecken.cust.Builder(other);
  }
  
  /**
   * RecordBuilder for cust instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<cust>
    implements org.apache.avro.data.RecordBuilder<cust> {

    private java.lang.CharSequence first;
    private java.lang.CharSequence middle;
    private java.lang.CharSequence last;
    private java.lang.CharSequence dob;
    private long ssn;
    private java.lang.CharSequence gender;
    private java.lang.CharSequence metrics;

    /** Creates a new Builder */
    private Builder() {
      super(cblecken.cust.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(cblecken.cust.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.first)) {
        this.first = data().deepCopy(fields()[0].schema(), other.first);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.middle)) {
        this.middle = data().deepCopy(fields()[1].schema(), other.middle);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.last)) {
        this.last = data().deepCopy(fields()[2].schema(), other.last);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dob)) {
        this.dob = data().deepCopy(fields()[3].schema(), other.dob);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ssn)) {
        this.ssn = data().deepCopy(fields()[4].schema(), other.ssn);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.gender)) {
        this.gender = data().deepCopy(fields()[5].schema(), other.gender);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.metrics)) {
        this.metrics = data().deepCopy(fields()[6].schema(), other.metrics);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing cust instance */
    private Builder(cblecken.cust other) {
            super(cblecken.cust.SCHEMA$);
      if (isValidValue(fields()[0], other.first)) {
        this.first = data().deepCopy(fields()[0].schema(), other.first);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.middle)) {
        this.middle = data().deepCopy(fields()[1].schema(), other.middle);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.last)) {
        this.last = data().deepCopy(fields()[2].schema(), other.last);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.dob)) {
        this.dob = data().deepCopy(fields()[3].schema(), other.dob);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.ssn)) {
        this.ssn = data().deepCopy(fields()[4].schema(), other.ssn);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.gender)) {
        this.gender = data().deepCopy(fields()[5].schema(), other.gender);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.metrics)) {
        this.metrics = data().deepCopy(fields()[6].schema(), other.metrics);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'first' field */
    public java.lang.CharSequence getFirst() {
      return first;
    }
    
    /** Sets the value of the 'first' field */
    public cblecken.cust.Builder setFirst(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.first = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'first' field has been set */
    public boolean hasFirst() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'first' field */
    public cblecken.cust.Builder clearFirst() {
      first = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'middle' field */
    public java.lang.CharSequence getMiddle() {
      return middle;
    }
    
    /** Sets the value of the 'middle' field */
    public cblecken.cust.Builder setMiddle(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.middle = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'middle' field has been set */
    public boolean hasMiddle() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'middle' field */
    public cblecken.cust.Builder clearMiddle() {
      middle = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'last' field */
    public java.lang.CharSequence getLast() {
      return last;
    }
    
    /** Sets the value of the 'last' field */
    public cblecken.cust.Builder setLast(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.last = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'last' field has been set */
    public boolean hasLast() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'last' field */
    public cblecken.cust.Builder clearLast() {
      last = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'dob' field */
    public java.lang.CharSequence getDob() {
      return dob;
    }
    
    /** Sets the value of the 'dob' field */
    public cblecken.cust.Builder setDob(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.dob = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'dob' field has been set */
    public boolean hasDob() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'dob' field */
    public cblecken.cust.Builder clearDob() {
      dob = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'ssn' field */
    public java.lang.Long getSsn() {
      return ssn;
    }
    
    /** Sets the value of the 'ssn' field */
    public cblecken.cust.Builder setSsn(long value) {
      validate(fields()[4], value);
      this.ssn = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'ssn' field has been set */
    public boolean hasSsn() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'ssn' field */
    public cblecken.cust.Builder clearSsn() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'gender' field */
    public java.lang.CharSequence getGender() {
      return gender;
    }
    
    /** Sets the value of the 'gender' field */
    public cblecken.cust.Builder setGender(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.gender = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'gender' field has been set */
    public boolean hasGender() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'gender' field */
    public cblecken.cust.Builder clearGender() {
      gender = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'metrics' field */
    public java.lang.CharSequence getMetrics() {
      return metrics;
    }
    
    /** Sets the value of the 'metrics' field */
    public cblecken.cust.Builder setMetrics(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.metrics = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'metrics' field has been set */
    public boolean hasMetrics() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'metrics' field */
    public cblecken.cust.Builder clearMetrics() {
      metrics = null;
      fieldSetFlags()[6] = false;
      return this;
    }

   // @Override
    public cust build() {
      try {
        cust record = new cust();
        record.first = fieldSetFlags()[0] ? this.first : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.middle = fieldSetFlags()[1] ? this.middle : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.last = fieldSetFlags()[2] ? this.last : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.dob = fieldSetFlags()[3] ? this.dob : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.ssn = fieldSetFlags()[4] ? this.ssn : (java.lang.Long) defaultValue(fields()[4]);
        record.gender = fieldSetFlags()[5] ? this.gender : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.metrics = fieldSetFlags()[6] ? this.metrics : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
